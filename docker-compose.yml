# TODO: cluster name
# TODO: profiles
# TODO: healthcheck
# TODO: restart
# TODO: worker replicas

services:
  db:
    image: mongo
    restart: always
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${MONGO_USER}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_PASSWORD}
    volumes:
      - mongo_data:/data/db
    ports:
      - '27017:27017'

  db-gui:
    # TODO: docker-compose.dev.yml
    image: mongo-express
    restart: always
    depends_on:
      - db
    environment:
      ME_CONFIG_MONGODB_ADMINUSERNAME: ${MONGO_USER}
      ME_CONFIG_MONGODB_ADMINPASSWORD: ${MONGO_PASSWORD}
      ME_CONFIG_MONGODB_URL: 'mongodb://${MONGO_USER}:${MONGO_PASSWORD}@mongo:27017/'
      ME_CONFIG_BASICAUTH: false
    ports:
      - '8081:8081'

  backend:
    build:
      context: backend/
    environment:
      BACKEND_SECRET_KEY: ${BACKEND_SECRET_KEY}
      BACKEND_IS_DEBUG_MODE: ${BACKEND_IS_DEBUG_MODE}
      MONGO_HOST: ${MONGO_HOST}
      MONGO_PORT: ${MONGO_PORT}
      MONGO_USER: ${MONGO_USER}
      MONGO_PASSWORD: ${MONGO_PASSWORD}
      MONGO_ALIAS: ${MONGO_ALIAS}
    restart: always
    depends_on:
      - db
    ports:
      - '8000:8000'

  # TODO: backend-db service

  worker:
    # TODO environment
    build:
      context: /worker
    volumes:
      - worker_logs:/worker/logs
    depends_on:
      - worker-celery-broker

  worker-celery-broker:
    image: redis:alpine
    ports:
      - '6379:6379'

  worker-flower:
    # TODO: docker-compose.dev.yml
    image: mher/flower
    command: celery --broker=redis://worker-celery-broker:6379/0 flower
    ports:
      - "5555:5555"
    depends_on:
      - worker-celery-broker
      - worker

volumes:
  mongo_data:
  worker_logs:
